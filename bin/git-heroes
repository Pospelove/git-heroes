#!/usr/bin/env ruby
# 
# TODO: 10 points for deploys !
# 
require 'rubygems'
require 'bundler/setup'
require 'dotenv'
require 'optparse'

require 'git_heroes/connection'
require 'git_heroes/engine'
require 'git_heroes/logger'

Dotenv.load

OPTIONS = {
  path:    'report.csv',
  verbose: false,
  token:   ENV['GITHUB_TOKEN'],
  weeks:   12
}

OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options]"

  opts.on("-r", "--organization ORG", "Progress organization ORG (required)") do |org|
    OPTIONS[:org] = org
  end

  opts.on("-o", "--output FILE", "Save report to FILE") do |path|
    OPTIONS[:path] = path
  end

  opts.on("-t", "--token TOKEN", "A Github authentication token (defaults to GITHUB_TOKEN)") do |token|
    OPTIONS[:token] = token
  end

  opts.on("-w", "--weeks WEEKS", Integer, "Report on the last WEEKS weeks (default #{OPTIONS[:weeks]}).") do |weeks|
    OPTIONS[:weeks] = weeks
  end

  opts.on("-v", "--verbose", "Run verbosely") do |v|
    OPTIONS[:verbose] = v
  end

  opts.on_tail("-h", "--help", "Show this message") do
    $stderr.puts opts
    exit 0
  end
end.parse!


if OPTIONS[:org].nil?
  $stderr.puts "No organization specified, aborting."
  exit 1
end

if !OPTIONS[:verbose]
  GitHeroes::Logger.instance.level = Logger::WARN
end

client = GitHeroes::Connection.new(token: OPTIONS[:token])
engine = GitHeroes::Engine.new(client:client, org:OPTIONS[:org], weeks:OPTIONS[:weeks])
engine.run
engine.export(OPTIONS[:path])